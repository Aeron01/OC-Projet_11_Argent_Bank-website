swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase & second part of project
  version: "2.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /user/transactions:
    get:
      security:
        - tokenAuth: []
      tags:
        - User Transaction Module (Phase 2)
      summary: User Transactions API
      description: Retrive all user transaction for the current month
      #produces:
      #- application/json
      responses:
        200:
          description: Success. Returns the list of transactions.
        401:
          description: Unautorized. Invalid or missing token.
        500:
          description: Server error.

  /user/transactions/{transactionId}:
    get:
      security:
        - tokenAuth: []
      tags:
        - User Transaction Module (Phase 2)
      summary: User Transactions API
      description: Retrive detail of a specifique transaction
      parameters:
        - name: transactionId
          in: path
          description: ID of the transaction to retrieve
          required: true
          type: string
      responses:
        200:
          description: Success. Returns the details of the specified transaction.
        401:
          description: Unautorized. Invalid or missing token.
        404:
          description: Transaction not found.
        500:
          description: Server error.

    put:
      security:
        - tokenAuth: []
      tags:
        - User Transaction Module (Phase 2)
      summary: User Transactions API
      description: Update or add information of a specific transaction
      parameters:
        - name: transactionId
          in: path
          description: ID of the transaction to update
          required: true
          type: string
        - name: transaction
          in: body
          description: Object representing the new information of the transaction
          required: true
          schema:
            $ref: "#/definitions/transaction"
      responses:
        200:
          description: Success. The transaction in information has been updated successfully.
        400:
          description: Bad request. Please check the provided data.
        401:
          description: Unautorized. Invalid or missing token.
        404:
          description: Transaction not found.
        500:
          description: Server error.

    delete:
      security:
        - tokenAuth: []
      tags:
        - User Transaction Module (Phase 2)
      summary: User Transactions API
      description: Delete information of a specific transaction
      parameters:
        - name: transactionId
          in: path
          description: ID of the transaction to delete
          required: true
          type: string
      responses:
        200:
          description: Success. The transaction in information has been deleted successfully.
        401:
          description: Unautorized. Invalid or missing token.
        404:
          description: Transaction not found.
        500:
          description: Server error.

    post:
      security:
        - tokenAuth: []
      tags:
        - User Transaction Module (Phase 2)
      summary: User Transactions API
      description: Add information related to specific transaction
      parameters:
        - name: transactionId
          in: path
          description: ID of the transaction to add information
          required: true
          type: string
        - name: info
          in: body
          description: Object representing the information to be added
          required: true
          schema:
            $ref: "#definitions/Transaction"
      responses:
        200:
          description: Success. The information has been updated successfully.
        400:
          description: Bad request. Please check the provided data.
        401:
          description: Unautorized. Invalid or missing token.
        404:
          description: Transaction not found.
        500:
          description: Server error.
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
  tokenAuth:
    type: apiKey
    name: Autorization
    in: header
    description: Token-based authentification. Provide the token in the format 'Bearer {token}'.
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Transaction:
    type: object
    properties:
      id:
        type: string
      descripton:
        type: string
